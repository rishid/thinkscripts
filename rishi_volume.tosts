# Rishi Volume Stats
# Created: August 25, 2024
# Copyright: Rishi Dhupar
#
# Combination of a few ideas:
# - add labels for daily average volume and current volume and a few other stats
# - changes label colors if symbol is having unusually daily volume
# - highlight volume candles if it is higher volume than recent candles
# - show buy volume vs sell volume for each candle
#   - thinkorswim does not provide buy vs sell volume but by using the price candle, one can create a "proxy" 
#     that estimates this
 
declare lower;

# Inputs
input DayLength = 30; # Number of days for average daily volume calculation
input UnusualDailyVolumePercent = 125;  # Multiplier for highlighting unusual volume
# Daily average volume knobs
input ShowDayAvg = yes;
input ShowTodayVolume =  yes;
input ShowPercentOfDayAvg = yes;
# Current timeframe bar knobs
input BarLength = 21; # Number of bars for average bar volume calculation
input UnusualBarVolumePercent = 150;  # Multiplier for highlighting unusual volume
input ShowBarAvg = yes;
input ShowCurrentBar = yes;
input ShowPercentOfBarAvg = yes;
input ShowSellVolumePercent = yes;

# Proxy buyer/seller volume by using % of candle "won" by each side
# def buyVolume = volume * (close - low) / (high - low);
def sellVolume = volume * (high - close) / (high - low);
# def buyersWinning = buy_volume >= sell_volume;

# Volume calcs
def volLastDayAvg = MovingAverage(AverageType.SIMPLE, volume(period = AggregationPeriod.DAY), DayLength)[1];
def today = volume(period = "DAY");
def todayPercentOfDay = Round((today / volLastDayAvg) * 100, 0);
def avgBars = VolumeAvg(BarLength).VolAvg; # TODO: should I use previous calc value, i.e. [1]
def curVolume = volume;
def percentOfBar = Round((curVolume / avgBars) * 100, 0);
def sellVolPercent = Round((sellVolume / curVolume) * 100, 0);

# Define volume conditions
def highVolume = percentOfBar > UnusualBarVolumePercent;
def midVolume = percentOfBar >= 50 and percentOfBar <= UnusualBarVolumePercent;
def lowVolume = percentOfBar < 50;

# Selling Volume
plot SellVol = sellVolume;
SellVol.SetPaintingStrategy(PaintingStrategy.HISTOGRAM);
# SellVol.HideTitle();
# SellVol.HideBubble();
SellVol.SetLineWeight(4);
SellVol.AssignValueColor(
    if highVolume then Color.RED
    else if midVolume then Color.DARK_RED
    else Color.DARK_RED
);

# Total Volume
plot BuyVol = volume;
BuyVol.SetPaintingStrategy(PaintingStrategy.HISTOGRAM);
# BuyVol.HideTitle();
# BuyVol.HideBubble();
BuyVol.SetLineWeight(4);
BuyVol.AssignValueColor(
    if highVolume then Color.UPTICK
    else if midVolume then Color.DARK_GREEN
    else Color.DARK_GREEN
);

# Plot average bar volume
plot avgBarsPlot = avgBars;
avgBarsPlot.SetDefaultColor(Color.BLUE);
avgBarsPlot.SetLineWeight(2); 

# Labels
AddLabel(ShowDayAvg, "Daily Avg: " + Round(volLastDayAvg, 0), Color.LIGHT_GRAY);
AddLabel(ShowTodayVolume, "Today: " + today, (if todayPercentOfDay >= UnusualDailyVolumePercent then Color.GREEN else if todayPercentOfDay >= 100 then Color.ORANGE else Color.LIGHT_GRAY));
AddLabel(ShowPercentOfDayAvg, todayPercentOfDay + "%", (if todayPercentOfDay >= UnusualDailyVolumePercent then Color.GREEN else if todayPercentOfDay >= 100 then Color.ORANGE else Color.WHITE) );
AddLabel(ShowBarAvg, "Avg Bars: " + Round(avgBars, 0), Color.LIGHT_GRAY);
AddLabel(ShowCurrentBar, "Cur Bar: " + curVolume, (if percentOfBar >= UnusualDailyVolumePercent then Color.GREEN else if percentOfBar >= 100 then Color.ORANGE else Color.LIGHT_GRAY));
AddLabel(ShowPercentOfBarAvg, percentOfBar + "%", (if percentOfBar >= UnusualDailyVolumePercent then Color.GREEN else if percentOfBar >= 100 then Color.ORANGE else Color.WHITE) );
AddLabel(ShowSellVolumePercent, "Cur Bar Sell %: " + sellVolPercent, (if sellVolPercent > 51 then Color.DARK_RED else if sellVolPercent < 49 then Color.DARK_GREEN else Color.ORANGE));

# Scanner plots
# plot scan_signal_buy = BuyVol > BuyVol[1];
# scan_signal_buy.hide();

# plot scan_visual_buy = if scan_signal_buy then BuyVol else double.nan;
# scan_visual_buy.setpaintingStrategy(paintingStrategy.POINTS);
# scan_visual_buy.setdefaultcolor(color.light_green);
# scan_visual_buy.setlineweight(3);

# plot scan_signal_sell = SellVol > SellVol[1];
# scan_signal_sell.hide();

# plot scan_visual_sell = if scan_signal_sell then SellVol else double.nan;
# scan_visual_sell.setpaintingStrategy(paintingStrategy.POINTS);
# scan_visual_sell.setdefaultcolor(color.magenta);
# scan_visual_sell.setlineweight(3);

# plot scan_signal_either = scan_signal_buy or scan_signal_sell;
# scan_signal_either.hide();                                             
