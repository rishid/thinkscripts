# Saty Phase Oscillator
# Copyright (C) 2022-2024
# A useful range-based signal to monitor various phases of the market.

declare lower;
input Show_Labels = yes;
input Show_Mean_Reversion_Signals = yes;

# Saty Phase Oscillator Signal
def pivot = ExpAverage(close, 21);
def above_pivot = close >= pivot;
def oscillator_signal = Round(ExpAverage(((close - pivot) / (3.0 * ATR(14))) * 100, 3),2);
plot phase_oscillator = oscillator_signal;
phase_oscillator.SetLineWeight(2);

# Phases
plot extended_up_zone = 100.0;
extended_up_zone.AssignValueColor(Color.LIGHT_GRAY);
extended_up_zone.HideBubble();
extended_up_zone.HideTitle();
plot distribution_zone = 61.8;
distribution_zone.AssignValueColor(Color.GRAY);
distribution_zone.HideBubble();
distribution_zone.HideTitle();
plot neutral_up_zone = 23.6;
neutral_up_zone.AssignValueColor(Color.DARK_GRAY);
neutral_up_zone.HideBubble();
neutral_up_zone.HideTitle();
plot neutral_down_zone = -23.6;
neutral_down_zone.AssignValueColor(Color.DARK_GRAY);
neutral_down_zone.HideBubble();
neutral_down_zone.HideTitle();
plot accumulation_zone = -61.8;
accumulation_zone.AssignValueColor(Color.GRAY);
accumulation_zone.HideBubble();
accumulation_zone.HideTitle();
plot extended_down_zone = -100.0;
extended_down_zone.AssignValueColor(Color.LIGHT_GRAY);
extended_down_zone.HideBubble();
extended_down_zone.HideTitle();

# Bollinger Band Compression Signal
def bband_offset = 2.0 * STDev(close, 21);
def bband_up = pivot + bband_offset
;
def bband_down = pivot - bband_offset;
def compression_threshold_up = pivot + (2.0 * ATR(14));
def compression_threshold_down = pivot - (2.0 * ATR(14));
def expansion_threshold_up = pivot + (1.854 * ATR(14));
def expansion_threshold_down = pivot - (1.854 * ATR(14));
def compression = if above_pivot then bband_up - compression_threshold_up else compression_threshold_down - bband_down;
def expansion_zone = if above_pivot then bband_up - expansion_threshold_up else expansion_threshold_down - bband_down;
def expansion = compression[1] <= compression[0];
def compression_tracker = if expansion and expansion_zone > 0 then 0 else if compression <= 0 then 1 else 0;
plot compression_level = If(IsNaN(close), Double.NaN, 0);
compression_level.AssignValueColor(if compression_tracker == 1 then Color.MAGENTA else Color.DARK_GRAY);
compression_level.HideBubble();
compression_level.HideTitle();
compression_level.SetLineWeight(2);

# Compressing / Expanding / Expanded
AddLabel(show_labels == yes and compression_tracker == 1, "Compression ", Color.MAGENTA);

# Mean Reversion PO Crossover Signals
def leaving_accumulation = (oscillator_signal[1] <= -61.8) and (oscillator_signal >= -61.8);
def leaving_distribution = (oscillator_signal[1] >= 61.8) and (oscillator_signal <= 61.8);
plot bullish_cross = if Show_Mean_Reversion_Signals and leaving_accumulation then oscillator_signal[1] - 5 else Double.NaN;
bullish_cross.SetPaintingStrategy(PaintingStrategy.SQUARES);
bullish_cross.AssignValueColor(Color.YELLOW);
bullish_cross.SetLineWeight(1);
bullish_cross.HideBubble();
plot bearish_cross = if Show_Mean_Reversion_Signals and leaving_distribution then oscillator_signal[1] + 5 else Double.NaN;
bearish_cross.SetPaintingStrategy(PaintingStrategy.SQUARES);
bearish_cross.AssignValueColor(Color.YELLOW);
bearish_cross.SetLineWeight(1);
bearish_cross.HideBubble();

# Phase Oscillator Plot Colors
phase_oscillator.AssignValueColor(
    if compression_tracker == 1 then Color.MAGENTA
    else if phase_oscillator >= 0 then Color.GREEN
    else Color.RED
);

# Scanning Plots
plot is_compressed = compression_tracker;
is_compressed.SetHiding(1);
is_compressed.HideBubble();
is_compressed.HideTitle();

def extended_up = oscillator_signal >= 100;
def in_distribution = oscillator_signal >= 61.8 and oscillator_signal < 100;
def in_mark_up = oscillator_signal > 23.6 and oscillator_signal < 61.8;
def in_launch_box = oscillator_signal >= -23.6 and oscillator_signal <= 23.6;
def in_mark_down = oscillator_signal > -61.8 and oscillator_signal < -23.6;
def in_accumulation = oscillator_signal <= -61.8 and oscillator_signal > -100;
def extended_down = oscillator_signal <= -100;
plot phase = if in_launch_box then 0 else if in_mark_up then 1 else if in_mark_down then -1 else if in_accumulation then -2 else if in_distribution then 2 else if extended_down then -3 else 3;
phase.SetHiding(1);
phase.HideBubble();
phase.HideTitle();

